name: Toten Node.js CI/CD

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

permissions:
  contents: write
  issues: write

jobs:
  semantic-release:
    name: Semantic Release
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ./clean-architecture/package-lock.json

      - name: Install dependencies
        working-directory: ./clean-architecture
        run: npm ci

      - name: Run semantic-release
        working-directory: ./clean-architecture
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          #NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release

      - name: Get generated version
        id: get_version
        run: |
          VERSION=$(git describe --tags --abbrev=0)
          echo "Generated version: $VERSION"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

  docker-build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: semantic-release
    if: startsWith(needs.semantic-release.outputs.new_tag, 'v')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        run: |
          VERSION=${{ needs.semantic-release.outputs.new_tag }}
          docker build -t ${{ secrets.ECR_REPOSITORY }}:$VERSION ./clean-architecture
          docker tag ${{ secrets.ECR_REPOSITORY }}:$VERSION ${{ secrets.ECR_REPOSITORY }}:latest

      - name: Push to Amazon ECR
        run: |
          VERSION=${{ needs.semantic-release.outputs.new_tag }}
          docker push ${{ secrets.ECR_REPOSITORY }}:$VERSION
          docker push ${{ secrets.ECR_REPOSITORY }}:latest